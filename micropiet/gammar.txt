program := 
macroDefinition*
command*

command := integer //push n
	| p //pop
	| + | - | * | / | % //arithmetic operators
	| ! //not
	| > //greater
	| d //dup
	| r //roll
	| n //inChar
	| N //inNum
	| o //outChar
	| O //outNum
	| :identifier //label
	| jmp identifier //jump unconditionally
	| br identifier identifier //branch. Nonzero/zero labels
	| switch (integer identifier)* end // switch. Followed by int/lable pairs to jump to for given values
	| identifier //macro expansion

integer := [0-9]+
identifier := [a-zA-Z0-9]+

macro := #{command*} //labels inside macro will be duplicated on each expansion